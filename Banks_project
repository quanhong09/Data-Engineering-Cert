import pandas as pd 
from bs4 import BeautifulSoup
import requests
import numpy as np 
import sqlite3
from datetime import datetime 

url = 'https://web.archive.org/web/20230908091635/https://en.wikipedia.org/wiki/List_of_largest_banks'
table_attribs = ["Name", "MC_USD_Billion"]
db_name = 'Banks.db'
table_name = 'Largest_banks'
csv_path = './Largest_banks_data.csv'

def log_progress(message):
    timestamp_format = '%Y-%h-%d-%H:%M:%S'
    now = datetime.now()
    timestamp = now.strftime(timestamp_format)
    with open("./code_log.txt","a") as f:
        f.write(timestamp + ' : ' + message + '\n')

def extract(url,table_attribs):
    page = requests.get(url).text
    data = BeautifulSoup(page,'html.parser')
    df = pd.DataFrame(columns=table_attribs) 
    tables = data.find_all('tbody')
    rows = tables[0].find_all('tr') 
    for row in rows:
        if row.find('td') is not None:
            col = row.find_all('td')
            bank_name = col[1].find_all('a')[1]['title']
            market_cap = col[2].contents[0][:-1]
            data_dict = {"Name": bank_name, "MC_USD_Billion": float(market_cap)}
            df1 = pd.DataFrame(data_dict,index =[0])
            df = pd.concat([df,df1],ignore_index=True)
    return df 

def transform (df,csv_path):
    exchange_rate = pd.read_csv(csv_path)
    exchange_rate = exchange_rate.set_index('Currency').to_dict()['Rate']
    df['MC_GBP_Billion'] = [np.round(x*exchange_rate['GBP'],2) for x in df['MC_USD_Billion']]
    df['MC_EUR_Billion'] = [np.round(x*exchange_rate['EUR'],2) for x in df['MC_USD_Billion']]
    df['MC_INR_Billion'] = [np.round(x*exchange_rate['INR'],2) for x in df['MC_USD_Billion']]
    return df 

def load_to_csv (df,output_path):
    df.to_csv(output_path)

def load_to_db (df,sql_connection,table_name):
    df.to_sql(table_name,sql_connection, if_exists='replace',index=False)

def run_queries(query_statement,sql_connection):
    print(query_statement)
    query_output = pd.read_sql(query_statement,sql_connection)
    print(query_output)

log_progress('preliminaries complete. Initiating ETL process')
df = extract(url,table_attribs)
log_progress('Data Extraction complete. Initiating Transformation process')
df = transform(df,'exchange_rate.csv')
log_progress('Data Transformation complete. Initiating loading process')
log_progress('Data saved to a CSV file')
log_progress('SQL connection initiated')
log_progress('Data loaded to Database as table. Executing queries')
log_progress('Process Complete')
log_progress('Server Connection Closed')

print (df)
sql_connection = sqlite3.connect(db_name)
load_to_db(df,sql_connection,table_name)

query_statement = f"SELECT * FROM {table_name}"
run_queries(query_statement,sql_connection)

query_statement = f"SELECT AVG(MC_GBP_Billion) FROM {table_name}"
run_queries(query_statement,sql_connection)

query_statement = f"SELECT Name from {table_name} LIMIT 5"
run_queries(query_statement,sql_connection)




































# Code for ETL operations on Country-GDP data

# Importing the required libraries

